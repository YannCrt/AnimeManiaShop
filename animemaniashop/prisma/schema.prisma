// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// This is your Prisma schema file
// Learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int       @id @default(autoincrement()) @map("Id_User")
  firstname       String    @db.VarChar(255)
  lastname        String    @db.VarChar(255)
  mail            String    @db.VarChar(255)
  password_hasch  String    @db.VarChar(255)
  role            String    @db.VarChar(255)
  inscription_date DateTime
  adress          String    @db.VarChar(255)
  cart            Cart?
  avis            Avis[]
  favoris         Favoris[]
}

model Category {
  id            Int       @id @default(autoincrement()) @map("Id_Category")
  category_name String    @db.VarChar(255)
  products      assigner[]
}

model Anime {
  id             Int       @id @default(autoincrement()) @map("Id_Anime")
  Anime_name     String    @db.VarChar(255)
  manga_category String    @db.VarChar(255)
  products       Product[]
}

model Product {
  id          Int        @id @default(autoincrement()) @map("Id_Product")
  name        String     @db.VarChar(255)
  description String     @db.VarChar(255)
  price       Int
  stock       Int
  image_url   String     @db.VarChar(255)
  anime       Anime      @relation(fields: [animeId], references: [id])
  animeId     Int        @map("Id_Anime")
  categories  assigner[]
  avis        Avis[]
  favoris     Favoris[]
  cartItem    Cart_Item?
}

model Cart {
  id            Int         @id @default(autoincrement()) @map("Id_Cart")
  date_creation DateTime
  user        User      @relation(fields: [userId], references: [id])
  userId      Int         @unique @map("Id_User")
  cartItems     Cart_Item[]
}

model Avis {
  id         Int      @id @default(autoincrement()) @map("Id_Avis")
  note       String   @db.VarChar(255)
  date_avis  DateTime
  content    String   @db.VarChar(255)
  product    Product  @relation(fields: [productId], references: [id])
  productId  Int      @map("Id_Product")
  user     User   @relation(fields: [userId], references: [id])
  userId   Int      @map("Id_User")
}

model Favoris {
  id         Int      @id @default(autoincrement()) @map("Id_Favoris")
  date_ajout DateTime
  user     User   @relation(fields: [userId], references: [id])
  userId   Int      @map("Id_User")
  product    Product  @relation(fields: [productId], references: [id])
  productId  Int      @map("Id_Product")
}

model Cart_Item {
  id        Int     @id @default(autoincrement()) @map("Id_Cart_Item")
  quantitee String  @db.VarChar(255)
  product   Product @relation(fields: [productId], references: [id])
  productId Int     @unique @map("Id_Product")
  cart      Cart    @relation(fields: [cartId], references: [id])
  cartId    Int     @map("Id_Cart")
}

model assigner {
  product    Product  @relation(fields: [productId], references: [id])
  productId  Int      @map("Id_Product")
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int      @map("Id_Category")

  @@id([productId, categoryId])
}